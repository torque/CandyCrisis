
                     CANDY CRISIS SDL

FEATURES:
• Runs natively on any platform with support for SDL. Developed
  primarily around the lame Mac Carbon SDL. Can compile and run
  with gcc/mingw32 on Windows and gcc on Linux.

ETC:
• Game functionality unchanged.
• Removed all Mac OS-specific concepts from the game, i.e.:
  - GWorlds replaced with SDL_Surfaces.
  - Rects and Points replaced with MRects and MPoints. (same contents)
• All resources moved into external files in a folder called
  "CandyCrisisResources." Graphics are all JPG and PNG, opened
  with SDL_image. Sounds are WAV. Music is still MOD type.
• Using the following Open Source projects:
  SDL, SDL_image (for graphics)
  libjpeg (used by SDL_image)
  libpng (used by SDL_image)
  zlib (used by libpng)
• Using fmod for sound; replaces MikMod
• Wrote a utility library, SDLU, to pick up slack in the SDL
  implementation and to help SDL mesh with a Mac-centric universe.
• New registration code algorithm based on a fast string hash.



                     CANDY CRISIS X

FEATURES:
• Runs natively on Mac OS X. Developed around Mac OS X
Public Beta 1H39 and 2E14.
Updated 3/25/2001 for Mac OS X 4K78--OS X 10.0.
Updated 8/25/2001 for Mac OS X 10.0.4.

ETC:
• Game functionality unchanged.
• Zerius Sound System scrapped, replaced with LibMikMod. I'm
very unhappy with performance relative to ZSS, but on G3s and up,
performance should not be a major concern. If only I could get
the source to ZSS so it could be Carbonized!
• Everything runs in one window now, instead of having
one window per interface element. This was necessary
because OS X wanted to put drop shadows around everything
and it looked pretty weird. This was also a personal pet
peeve that I never had the motivation to fix until now.
• Controls dialog is super Aqua savvy, using Theme Text
and Theme Buttons.
• A couple of kludges added, to work around OS X bugs. Ugh.
• Found bug which was causing blitter to draw larger dirty rects
than necessary (top/left of dirty rect was always 0/0). Not sure
if it ever shipped like that or if this is something I changed
post-Candy Crisis 1.0.
• Changed cursor management since OS X cursors don't know how to
hide and show themselves properly.

UNRESOLVED:
• Stopped getting Out of Memory reports. I wonder if any of the
Candy Crisis cleanups affected this...?
• OS X displays a line of garbage when you try to put up a totally
blank cursor. I'm not going to spend too long analyzing this; it's
not my bug.



                   CANDY CRISIS 1.0 UPDATE

FEATURES:
• Rebranded "Candy Crisis" at the request of Mars Candy Co.
Many, many graphical changes as a result. (New logo thanks
to Bob Frasure.)
• "Controls" button in main menu per many user requests.
• Slightly improved error reporting.
• Option-key at startup to turn on "allow background tasks"
or "don't change resolutions." (Don't change resolutions
requires DrawSprocket 1.7.)

NONCRITICAL:
• Fixed bug in 2P mode where game would say "Player 1 got
 best combo!" when Player 2 really got it, and vice versa.
• Changed Magic Skittle ratio to 1/19 instead of 1/17, after
watching Brett get tons of Magic Skittles at work. Hmm.
• Replaced RandomBefore with less hacked-up code, because
Magic Skittles STILL seemed to be coming up more often than
expected. That seemed to take care of it.
• Fixed rare bug where, after losing, the game would sometimes
get stuck until you explicitly chose "end game." (Would manifest
more often on a slow computer and/or when Background Tasks were
activated.)

ETC:
• Antipiracy measures.
• Game fonts all loaded at startup time instead of dynamically,
in an attempt to reduce the number of GWorlds which are created,
then torn down, during the game (which could have been potentially
fragmenting the heap, though I doubt this was a real problem).

UNRESOLVED:
• Still a handful of people who get Out of Memory when they
try to pause a game. Damn. Hopefully now I'll at least know
where they're dying (though I highly suspect it's InitGWorld,
which without a stack crawl is pretty much useless info...)
One guy says this is fixed by deleting prefs. Huh??



                    2.0.2 UPDATE

FEATURES:
• When you continue, your score is now rolled back to what
it was when you first started the round. This prevents people
from racking up high scores by continuing over and over again
on the highest board.
• You can now clear the high score tables to their default
values by holding delete while clicking "high scores" on the
main screen.

ETC:
• Added small picture to the controls dialog so people know
which color is Player 1, and which is Player 2.
• Holding option while warping causes a CPU/CPU match to
occur.
• Changed in-game registration URL to:
http://emulation.net/s2.com/register.html

CRITICAL:
• Fixed minor memory corruption when a bomb hits floor or
gray Skittle. Could potentially have corrupted 3 tiles of
opponent's board.
• Fixed bug where potential combo data would not be cleared
when choosing "End Game" and then starting a new game, which
led to really weird corruptions of potential combo data.
• Fixed bug where holding down button after end-credits rolled
would cause the pause dialog to pop up on a zero-gamma screen
(whoops).

NONCRITICAL:
• Fixed bug where dropping bomb would not display associated
points.
• Fixed bug where dropping bomb on floor/gray Skittle would
reward the player for "killing" empty squares, making it
score 100x(9-number of grays in 3x3 area) as opposed to
the correct 100x(number of blobs in 3x3 area).
• Occasionally, when Best Combo got corrupted, it would show
the ending credits instead of displaying the Best Combo. Now
there is code to ensure that the level # of the Best Combo
structure is in bounds. (If it isn't, the best combo is
assumed to be corrupt, and it is deleted. Not the most
optimal solution, but what can I do?)
• If you started the tutorial, ended it, then viewed the best
combo, you'd see a speech balloon appear for one frame.
• Fixed bug where bringing up InputSprocket dialog would
unload ics8's used to draw key caps (damn InputSprocket bugs).
Does this only affect ISp < 1.7?
• Fixed bug where bringing up InputSprocket dialog would not
update game windows behind it after it got closed.

UNRESOLVED:
• Slow loading time issue seems to only be affecting an
incredible minority of people. It's being caused by QuickTime
decompressing JPEGs. I think it's not a Skittles 2 issue.
• One guy says if he quits the game, reopens it, starts a game,
then pauses it, he gets an Out of Memory condition. He's running
8.6-D clean. Hmm.



                    2.0.1 UPDATE

FEATURES:
 • Best Combo
• New bg for level 8
• New sfx for continue sound (requested by Nathan Lamont)

ETC:
• High score dialog enhanced to support Best Combo stuff
• Tutorial suggests pressing esc to set up keys now
• More aggressive AI for intellect>18 (does not percieve
1-level zap as advantageous)

CRITICAL:
• Fix for out-of-bounds array read (->crash) inside
ZapScoreDisplay.
• Fixed bug where falling Skittles (in DropBlobs) would
occasionally have their bottom half lopped off. Tough to
see while in motion but totally obvious in screenshots.
• Fixed InputSprocket icons in ISpConfigure dialog
• Workaround for System 7 bug, where setting the
cursor while gamma is faded causes solid black cursor.

NONCRITICAL:
• Fixed bug where char fading on blobs that were
in motion would cause crap to appear for one frame.
Only apparent on slow Macs or in screenshots. Otherwise
appeared as flicker and easily dismissed.
• Cmd-tab inside High Scores or Game Over screen
no longer leaves a white box (empty window) open
and will not switch out with 0 gamma
• Fixed DrawSprocket bug on Macs that can't do 640x480
(i.e. PowerBook G3 is stuck at 1024x768). The window
would be drawn in lower-right hand corner instead of
centered.
• Fixed bug in multipliers for getting multiple
colors at once. (Should have been *3/*6/*12/*24, was
actually *3/*9/*21/*45! Ouch!)
• Hitting cmd-Q at high score dialog would allow
empty high score name to be added to high score table.

UNRESOLVED:
• A few users report very slow loading times between
levels and during loading sequence. Problem tends to
be alleviated by turning on VM. Can't reproduce here.



                2.0.0 INITIAL RELEASE
